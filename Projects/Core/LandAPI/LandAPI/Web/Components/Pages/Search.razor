@using LandAPI.Web.Components.Layouts
@using Microsoft.AspNetCore.Components
@using LandAPI.API.Models
@using System.Text.Json
@using System.IO
@page "/landopedia"
<link rel="stylesheet" href="Web/css/search.css" />

<MainLayout>
    <Body>
@*         <input class="header3" id="SearchBar" type="text" placeholder="Search..."
               @bind="SearchQuery" @oninput="OnSearchInput" /> *@

        <div class="search-container scrollviewer" id="landerContainer">
            @if (filteredLanders.Any())
            {
                @foreach (var lander in filteredLanders)
                {
                    <Card Lander="@lander" />
                }
            }
            else
            {
                <p class="header2" style="text-align: center; color: var(--Gray-100);">
                    No landers found!
                </p>
            }
        </div>
    </Body>
</MainLayout>

@code 
{
    private readonly string pathfile = "wwwroot/Assets/Data/landers.json";

    private List<Lander> landers = new List<Lander>();
    private string? SearchQuery { get; set; } = string.Empty;

    private List<Lander> filteredLanders = new();

    protected override void OnInitialized()
    {
        try
        {
            string filePath = Path.Combine(Directory.GetCurrentDirectory(), pathfile);
            if (File.Exists(filePath))
            {
                string jsonData = File.ReadAllText(filePath);
                landers = JsonSerializer.Deserialize<List<Lander>>(jsonData) ?? new List<Lander>();
                UpdateFilteredLanders();
            }
            Console.WriteLine("Initialize succeed");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading landers: {ex.Message}");
        }
    }

    private void UpdateFilteredLanders()
    {
        filteredLanders = landers
            .Where(l => string.IsNullOrEmpty(SearchQuery) || l.Name.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase))
            .ToList();
        StateHasChanged();
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        Console.WriteLine("On search");

        SearchQuery = e.Value?.ToString() ?? string.Empty;
        UpdateFilteredLanders();
    }
}
